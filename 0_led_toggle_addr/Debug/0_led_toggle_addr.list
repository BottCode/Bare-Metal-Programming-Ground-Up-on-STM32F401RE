
0_led_toggle_addr.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001c4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000358  08000360  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000358  08000358  00010360  2**0
                  CONTENTS
  4 .ARM          00000000  08000358  08000358  00010360  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000358  08000360  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000358  08000358  00010358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800035c  0800035c  0001035c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010360  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000360  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000360  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010360  2**0
                  CONTENTS, READONLY
 12 .comment      00000070  00000000  00000000  00010390  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000020a  00000000  00000000  00010400  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_abbrev 00000129  00000000  00000000  0001060a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000068  00000000  00000000  00010738  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000040  00000000  00000000  000107a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00000903  00000000  00000000  000107e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000191  00000000  00000000  000110e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    000028e1  00000000  00000000  00011274  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_frame  00000064  00000000  00000000  00013b58  2**2
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_loc    00000054  00000000  00000000  00013bbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000194 <deregister_tm_clones>:
 8000194:	4b04      	ldr	r3, [pc, #16]	; (80001a8 <deregister_tm_clones+0x14>)
 8000196:	4805      	ldr	r0, [pc, #20]	; (80001ac <deregister_tm_clones+0x18>)
 8000198:	1a1b      	subs	r3, r3, r0
 800019a:	2b06      	cmp	r3, #6
 800019c:	d902      	bls.n	80001a4 <deregister_tm_clones+0x10>
 800019e:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <deregister_tm_clones+0x1c>)
 80001a0:	b103      	cbz	r3, 80001a4 <deregister_tm_clones+0x10>
 80001a2:	4718      	bx	r3
 80001a4:	4770      	bx	lr
 80001a6:	bf00      	nop
 80001a8:	20000003 	.word	0x20000003
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000

080001b4 <register_tm_clones>:
 80001b4:	4905      	ldr	r1, [pc, #20]	; (80001cc <register_tm_clones+0x18>)
 80001b6:	4806      	ldr	r0, [pc, #24]	; (80001d0 <register_tm_clones+0x1c>)
 80001b8:	1a09      	subs	r1, r1, r0
 80001ba:	1089      	asrs	r1, r1, #2
 80001bc:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80001c0:	1049      	asrs	r1, r1, #1
 80001c2:	d002      	beq.n	80001ca <register_tm_clones+0x16>
 80001c4:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <register_tm_clones+0x20>)
 80001c6:	b103      	cbz	r3, 80001ca <register_tm_clones+0x16>
 80001c8:	4718      	bx	r3
 80001ca:	4770      	bx	lr
 80001cc:	20000000 	.word	0x20000000
 80001d0:	20000000 	.word	0x20000000
 80001d4:	00000000 	.word	0x00000000

080001d8 <__do_global_dtors_aux>:
 80001d8:	b510      	push	{r4, lr}
 80001da:	4c06      	ldr	r4, [pc, #24]	; (80001f4 <__do_global_dtors_aux+0x1c>)
 80001dc:	7823      	ldrb	r3, [r4, #0]
 80001de:	b943      	cbnz	r3, 80001f2 <__do_global_dtors_aux+0x1a>
 80001e0:	f7ff ffd8 	bl	8000194 <deregister_tm_clones>
 80001e4:	4b04      	ldr	r3, [pc, #16]	; (80001f8 <__do_global_dtors_aux+0x20>)
 80001e6:	b113      	cbz	r3, 80001ee <__do_global_dtors_aux+0x16>
 80001e8:	4804      	ldr	r0, [pc, #16]	; (80001fc <__do_global_dtors_aux+0x24>)
 80001ea:	f3af 8000 	nop.w
 80001ee:	2301      	movs	r3, #1
 80001f0:	7023      	strb	r3, [r4, #0]
 80001f2:	bd10      	pop	{r4, pc}
 80001f4:	20000000 	.word	0x20000000
 80001f8:	00000000 	.word	0x00000000
 80001fc:	08000340 	.word	0x08000340

08000200 <frame_dummy>:
 8000200:	b508      	push	{r3, lr}
 8000202:	4b08      	ldr	r3, [pc, #32]	; (8000224 <frame_dummy+0x24>)
 8000204:	b11b      	cbz	r3, 800020e <frame_dummy+0xe>
 8000206:	4808      	ldr	r0, [pc, #32]	; (8000228 <frame_dummy+0x28>)
 8000208:	4908      	ldr	r1, [pc, #32]	; (800022c <frame_dummy+0x2c>)
 800020a:	f3af 8000 	nop.w
 800020e:	4808      	ldr	r0, [pc, #32]	; (8000230 <frame_dummy+0x30>)
 8000210:	6803      	ldr	r3, [r0, #0]
 8000212:	b913      	cbnz	r3, 800021a <frame_dummy+0x1a>
 8000214:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000218:	e7cc      	b.n	80001b4 <register_tm_clones>
 800021a:	4b06      	ldr	r3, [pc, #24]	; (8000234 <frame_dummy+0x34>)
 800021c:	2b00      	cmp	r3, #0
 800021e:	d0f9      	beq.n	8000214 <frame_dummy+0x14>
 8000220:	4798      	blx	r3
 8000222:	e7f7      	b.n	8000214 <frame_dummy+0x14>
 8000224:	00000000 	.word	0x00000000
 8000228:	08000340 	.word	0x08000340
 800022c:	20000004 	.word	0x20000004
 8000230:	20000000 	.word	0x20000000
 8000234:	00000000 	.word	0x00000000

08000238 <main>:
#define PIN5				(1U << 5)
#define LED_PIN      		PIN5


int main (void)
{
 8000238:	b480      	push	{r7}
 800023a:	b085      	sub	sp, #20
 800023c:	af00      	add	r7, sp, #0
	// 1. Enable clock access to GPIOA
	RCC_AHB1EN_R |= GPIOAEN;
 800023e:	4a15      	ldr	r2, [pc, #84]	; (8000294 <main+0x5c>)
 8000240:	4b14      	ldr	r3, [pc, #80]	; (8000294 <main+0x5c>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	f043 0301 	orr.w	r3, r3, #1
 8000248:	6013      	str	r3, [r2, #0]

	// 2. Set PA5 as output pin
	GPIOA_MODE_R |= (1U << 10); // Set bit 10 to 1
 800024a:	4a13      	ldr	r2, [pc, #76]	; (8000298 <main+0x60>)
 800024c:	4b12      	ldr	r3, [pc, #72]	; (8000298 <main+0x60>)
 800024e:	681b      	ldr	r3, [r3, #0]
 8000250:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000254:	6013      	str	r3, [r2, #0]
	GPIOA_MODE_R &=~(1U << 11); // Set bit 11 to 0
 8000256:	4a10      	ldr	r2, [pc, #64]	; (8000298 <main+0x60>)
 8000258:	4b0f      	ldr	r3, [pc, #60]	; (8000298 <main+0x60>)
 800025a:	681b      	ldr	r3, [r3, #0]
 800025c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000260:	6013      	str	r3, [r2, #0]
	volatile B;
	int a = B;
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	60bb      	str	r3, [r7, #8]
	for (int i = 0; i < 3; i++)
 8000266:	2300      	movs	r3, #0
 8000268:	60fb      	str	r3, [r7, #12]
 800026a:	e008      	b.n	800027e <main+0x46>
	{
		// 4. Set PA5 high
		// GPIOA_OD_R |= LED_PIN;
		// 5. toggle PA5
		GPIOA_OD_R ^= LED_PIN;
 800026c:	4a0b      	ldr	r2, [pc, #44]	; (800029c <main+0x64>)
 800026e:	4b0b      	ldr	r3, [pc, #44]	; (800029c <main+0x64>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f083 0320 	eor.w	r3, r3, #32
 8000276:	6013      	str	r3, [r2, #0]
	// 2. Set PA5 as output pin
	GPIOA_MODE_R |= (1U << 10); // Set bit 10 to 1
	GPIOA_MODE_R &=~(1U << 11); // Set bit 11 to 0
	volatile B;
	int a = B;
	for (int i = 0; i < 3; i++)
 8000278:	68fb      	ldr	r3, [r7, #12]
 800027a:	3301      	adds	r3, #1
 800027c:	60fb      	str	r3, [r7, #12]
 800027e:	68fb      	ldr	r3, [r7, #12]
 8000280:	2b02      	cmp	r3, #2
 8000282:	ddf3      	ble.n	800026c <main+0x34>
 8000284:	2300      	movs	r3, #0
		// 4. Set PA5 high
		// GPIOA_OD_R |= LED_PIN;
		// 5. toggle PA5
		GPIOA_OD_R ^= LED_PIN;
	}
}
 8000286:	4618      	mov	r0, r3
 8000288:	3714      	adds	r7, #20
 800028a:	46bd      	mov	sp, r7
 800028c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000290:	4770      	bx	lr
 8000292:	bf00      	nop
 8000294:	40023830 	.word	0x40023830
 8000298:	40020000 	.word	0x40020000
 800029c:	40020014 	.word	0x40020014

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	; (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480c      	ldr	r0, [pc, #48]	; (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490d      	ldr	r1, [pc, #52]	; (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0d      	ldr	r2, [pc, #52]	; (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0a      	ldr	r2, [pc, #40]	; (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0a      	ldr	r4, [pc, #40]	; (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 f811 	bl	80002f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002d2:	f7ff ffb1 	bl	8000238 <main>

080002d6 <LoopForever>:

LoopForever:
    b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002d8:	20018000 	.word	0x20018000
  mov   sp, r0          /* set stack pointer */
/* Call the clock system intitialization function.*/
  bl  SystemInit

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	08000360 	.word	0x08000360
  adds r4, r0, r3
  cmp r4, r1
  bcc CopyDataInit

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC_IRQHandler>
	...

080002f4 <__libc_init_array>:
 80002f4:	b570      	push	{r4, r5, r6, lr}
 80002f6:	4b0e      	ldr	r3, [pc, #56]	; (8000330 <__libc_init_array+0x3c>)
 80002f8:	4c0e      	ldr	r4, [pc, #56]	; (8000334 <__libc_init_array+0x40>)
 80002fa:	1ae4      	subs	r4, r4, r3
 80002fc:	10a4      	asrs	r4, r4, #2
 80002fe:	2500      	movs	r5, #0
 8000300:	461e      	mov	r6, r3
 8000302:	42a5      	cmp	r5, r4
 8000304:	d004      	beq.n	8000310 <__libc_init_array+0x1c>
 8000306:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800030a:	4798      	blx	r3
 800030c:	3501      	adds	r5, #1
 800030e:	e7f8      	b.n	8000302 <__libc_init_array+0xe>
 8000310:	f000 f816 	bl	8000340 <_init>
 8000314:	4c08      	ldr	r4, [pc, #32]	; (8000338 <__libc_init_array+0x44>)
 8000316:	4b09      	ldr	r3, [pc, #36]	; (800033c <__libc_init_array+0x48>)
 8000318:	1ae4      	subs	r4, r4, r3
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2500      	movs	r5, #0
 800031e:	461e      	mov	r6, r3
 8000320:	42a5      	cmp	r5, r4
 8000322:	d004      	beq.n	800032e <__libc_init_array+0x3a>
 8000324:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000328:	4798      	blx	r3
 800032a:	3501      	adds	r5, #1
 800032c:	e7f8      	b.n	8000320 <__libc_init_array+0x2c>
 800032e:	bd70      	pop	{r4, r5, r6, pc}
 8000330:	08000358 	.word	0x08000358
 8000334:	08000358 	.word	0x08000358
 8000338:	0800035c 	.word	0x0800035c
 800033c:	08000358 	.word	0x08000358

08000340 <_init>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr

0800034c <_fini>:
 800034c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034e:	bf00      	nop
 8000350:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000352:	bc08      	pop	{r3}
 8000354:	469e      	mov	lr, r3
 8000356:	4770      	bx	lr
